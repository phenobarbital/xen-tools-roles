#!/bin/sh
#
# Servidor basico Debian / Version para Xen
#
# Jesus Lara
# --
# http://www.devel.com.ve/
#

# define prefix
prefix=$1

#
#  Source our common functions - this will let us install a Debian package.
#
if [ -e /usr/lib/xen-tools/common.sh ]; then
    . /usr/lib/xen-tools/common.sh
else
    echo "Installation problem"
fi

########################################
#
# configure apt
# 

mirror="http://172.16.30.1/mirrors/debian/"
dist=`xt-guess-suite-and-mirror --suite`

# disable apt sources.list base
sed -i 's/^deb/#deb/' ${prefix}/etc/apt/sources.list

# erase all .list repositories
rm -f ${prefix}/etc/apt/sources.list.d/*.list
/bin/echo 'Acquire::Check-Valid-Until "false";' > ${prefix}/etc/apt/apt.conf.d/80update

#
# create local apt list
#
# oficial repositories
cat <<E_O_APT > ${prefix}/etc/apt/sources.list.d/local.list
# oficial
deb ${mirror} ${dist} main contrib non-free
E_O_APT

# backport repositories
cat <<E_O_APT > ${prefix}/etc/apt/sources.list.d/backports.list
deb ${mirror} ${dist}-backports main contrib non-free
E_O_APT

#
#  Update APT lists.
#
chroot ${prefix} /usr/bin/apt-get update

#
# Install and update Aptitude
#
installDebianPackage ${prefix} aptitude
chroot ${prefix} /usr/bin/aptitude update

#################################

#
# configure snmpd
#
DEBIAN_FRONTEND=noninteractive chroot ${prefix} /usr/bin/apt-get -o Dpkg::Options::='--force-confold' -y install snmpd

# enable snmp daemon
sed -i -e "s/SNMPDRUN=no/SNMPDRUN=yes/" ${prefix}/etc/default/snmpd

# configure snmpd
cat <<SNMPD_CONF_EOF >${prefix}/etc/snmp/snmpd.conf
agentAddress  udp:0.0.0.0:161
view   systemonly  included   .1.3.6.1.2.1.1
view   systemonly  included   .1.3.6.1.2.1.25.1
rocommunity public  default    -V systemonly
rouser   authOnlyUser
sysLocation    DEVEL
sysContact     info <info@devel.com.ve>
sysServices    72
proc  mountd
proc  ntalkd    4
proc  sendmail 10 1
disk       /     10000
disk       /var  5%
includeAllDisks  10%
load   12 10 5
trapsink     localhost public
iquerySecName   internalUser
rouser          internalUser
defaultMonitors          yes
linkUpDownNotifications  yes
extend    test1   /bin/echo  Hello, world!
extend-sh test2   echo Hello, world! ; echo Hi there ; exit 35
master          agentx
SNMPD_CONF_EOF

# stop service snmp
chroot ${prefix} /etc/init.d/snmpd stop

###########################################

#
# install and configure vim
#

installDebianPackage ${prefix} vim

# configure .vimrc

cat <<VIMRC_EOF >${prefix}/etc/vim/vimrc.local
" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }
" }

" General {
        syntax on
if has("autocmd")
  filetype plugin indent on
endif
    set viewoptions=folds,options,cursor,unix,slash " better unix / windows compatibility
    set history=1000                " Store a ton of history (default is 20)
    " }
" }

" Vim UI {
    if has('cmdline_info')
        set ruler                   " show the ruler
        set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
        set showcmd                 " show partial commands in status line and
                                    " selected characters/lines in visual mode
    endif
    set nu                          " Line numbers on
    set number
    set mouse=r
    set showmatch                   " show matching brackets/parenthesis
    set incsearch                   " find as you type search
    set hlsearch                    " highlight search terms
" }

" Formatting {
    set nowrap                      " wrap long lines
    set autoindent                  " indent at the same level of the previous line
    set shiftwidth=4                " use indents of 4 spaces
    set expandtab                   " tabs are spaces, not tabs
    set tabstop=4                   " an indentation every four columns
    set softtabstop=4               " let backspace delete indent
    "set matchpairs+=<:>                " match, to be used with %
    set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)
    "set comments=sl:/*,mb:*,elx:*/  " auto format comment blocks
    " Remove trailing whitespaces and ^M chars
    autocmd FileType c,cpp,java,php,js,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
" }

" Use local vimrc if available {
    if filereadable(expand("~/.vimrc.local"))
        source ~/.vimrc.local
    endif
" }
VIMRC_EOF

###########################################
#
# configure bashrc
#

# install bash-completion
installDebianPackage ${prefix} bash-completion

# enable bash-completion
sed -i '/#if ! shopt.*$/,+6s/#//' ${prefix}/etc/bash.bashrc

cat <<BASHRC_EOF >>${prefix}/etc/bash.bashrc

# history options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
         xterm-color) color_prompt=yes;;
esac
force_color_prompt=yes
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
     test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
     alias ls='ls --color=auto'
     alias grep='grep --color=auto'
     alias egrep='egrep --color=auto'
fi
BASHRC_EOF

###########################################

#
# add changes in sysctl
#

cat <<SYSCTL_EOF >>${prefix}/etc/sysctl.conf
# VM
vm.dirty_ratio = 20
vm.dirty_background_ratio = 20
vm.dirty_bytes = 67108864
vm.dirty_background_bytes = 134217728
# swapping
vm.swappiness = 0
vm.vfs_cache_pressure = 40
# fs
fs.aio-max-nr = 1048576
fs.file-max = 287573
#cantidad de hilos maximos
kernel.threads-max = 98006
#networking
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_default = 8388608
net.core.wmem_max = 16777216
net.core.optmem_max = 40960
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_mem = 8388608 8388608 8388608
net.ipv4.tcp_congestion_control = westwood
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_max_tw_buckets = 500000
# number of packets to keep in backlog before the kernel starts dropping them
net.ipv4.tcp_max_syn_backlog = 3240000
# increase socket listen backlog
net.core.somaxconn = 3240000
net.ipv4.tcp_max_tw_buckets = 1440000
# memory
kernel.sem = 100 32000 100 128
SYSCTL_EOF

###########################################

#
# configure fs
#

installDebianPackage ${prefix} xfsprogs
installDebianPackage ${prefix} btrfs-tools

##########################################

#
# configure ssh
#

cat <<SSHBANNER_EOF >>${prefix}/etc/ssh/sshd_banner
************************************************

Bienvenidos a un equipo de la red DEVEL
Debian GNU/Linux system

*************************************************
SSHBANNER_EOF

# change banner in ssh
sed -i -e "s/^#Banner \/etc\/issue.net/Banner \/etc\/ssh\/sshd_banner/" ${prefix}/etc/ssh/sshd_config

##########################################

#
# configure host
#

cat <<HOSTCONF_EOF >>${prefix}/etc/host.conf
multi on
order hosts,bind
HOSTCONF_EOF

##########################################
#
# basic programming languages
#

installDebianPackage ${prefix} perl-modules
installDebianPackage ${prefix} python-minimal
installDebianPackage ${prefix} python-pip
installDebianPackage ${prefix} python-setuptools
installDebianPackage ${prefix} ruby
installDebianPackage ${prefix} rubygems
installDebianPackage ${prefix} php5-cli

##########################################

#
# basic postfix
#

DEBIAN_FRONTEND=noninteractive chroot ${prefix} /usr/bin/apt-get -o Dpkg::Options::='--force-confold' -y install postfix
chroot ${prefix} /etc/init.d/postfix stop

#########################################

#
#  Install packages.
#

installDebianPackage ${prefix} less
installDebianPackage ${prefix} openssh-server
installDebianPackage ${prefix} openssh-client
installDebianPackage ${prefix} iptraf
installDebianPackage ${prefix} tcpdump
installDebianPackage ${prefix} htop
installDebianPackage ${prefix} lsof
installDebianPackage ${prefix} traceroute
installDebianPackage ${prefix} vlock
installDebianPackage ${prefix} ntpdate
installDebianPackage ${prefix} lsb-release
installDebianPackage ${prefix} ssl-cert

#########################################

#
# tools
#

installDebianPackage ${prefix} screen
installDebianPackage ${prefix} dish
installDebianPackage ${prefix} rsync
installDebianPackage ${prefix} libpcre3


#########################################

#
# vcs
#
installDebianPackage ${prefix} git-core

# configure git
chroot ${prefix} /usr/bin/git config --global user.name "Soporte"
chroot ${prefix} /usr/bin/git config --global user.email soporte@devel.com.ve


#########################################

#
# basic security protection
#

# shorewall-firewall
installDebianPackage ${prefix} shorewall

# enable shorewall
sed -i -e "s/startup=0/startup=1/" ${prefix}/etc/default/shorewall

# - deshabilitar ipv6
sed -i "s/^DISABLE_IPV6=.*$/DISABLE_IPV6=Yes/" ${prefix}/etc/shorewall/shorewall.conf

# optimize shorewall rules
sed -i "s/^OPTIMIZE=.*$/OPTIMIZE=8/" ${prefix}/etc/shorewall/shorewall.conf

# - integrate with fail2ban
sed -i "s/^BLACKLISTNEWONLY=.*$/BLACKLISTNEWONLY=No/" ${prefix}/etc/shorewall/shorewall.conf

sed -i "s/^CLAMPMSS=.*$/CLAMPMSS=Yes/" ${prefix}/etc/shorewall/shorewall.conf

# - deshabilitar ip-forwarding:
sed -i "s/^IP_FORWARDING=.*$/IP_FORWARDING=No/" ${prefix}/etc/shorewall/shorewall.conf

# configure shorewall
cat <<INTERFACES_EOF >${prefix}/etc/shorewall/interfaces
############################################################################
# Shorewall interfaces
FORMAT 2
#ZONE   INTERFACE   OPTIONS
lan     eth0            routefilter,tcpflags,nosmurfs,sourceroute=0
INTERFACES_EOF

cat <<ZONES_EOF >${prefix}/etc/shorewall/zones
############################################################################
# Shorewall Zones
#ZONE   TYPE    OPTIONS         IN          OUT
#                   OPTIONS         OPTIONS
fw  firewall
lan ipv4
ZONES_EOF

cat <<POLICY_EOF >${prefix}/etc/shorewall/policy
############################################################################
# shorewall policies
#SOURCE     DEST        POLICY      LOG LEVEL   LIMIT:BURST
fw      lan     ACCEPT
lan     fw      ACCEPT
# The FOLLOWING POLICY MUST BE LAST
all     all     REJECT      info
POLICY_EOF

TCP_PORTS="80,443"
UDP_PORTS="53,161"
cat > ${prefix}/etc/shorewall/rules << EOF
#ACTION     SOURCE  DEST    PROTO   DEST   SOURCE  ORIGINAL RATE   USER/  MARK
#                                   PORT   PORT(S) DEST     LIMIT  GROUP
#
# Accept Ping and Traceroute from the internet
ACCEPT:info lan     fw     icmp       8
# Accept NTP udp
ACCEPT    lan     fw    udp     123
# SSH Access
ACCEPT      all     fw     tcp        22    -    -   2/min:3
# Accept PING
Ping(ACCEPT)     lan     all

# open ports (multiport)
ACCEPT        all        fw       tcp      ${TCP_PORTS}
ACCEPT        all        fw       udp      ${UDP_PORTS}
EOF

# stop shorewall (for prevent failures)
chroot ${prefix} /etc/init.d/shorewall stop

#########################################

#
# Limpiar el cache de paquetes de aptitude
#
chroot ${prefix} /usr/bin/apt-get -y autoremove
chroot ${prefix} /usr/bin/apt-get -y clean

#
# create a basic user
#
chroot ${prefix} /usr/sbin/groupadd --gid 1100 administradores
chroot ${prefix} /usr/sbin/useradd --uid 1100 --create-home -d /home/soporte -s /bin/bash soporte
